<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
	default-destroy-method="destroy" default-init-method="start">
	<!-- Properties -->
	<bean id="propertyplaceSystem"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		lazy-init="false">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:env.web.properties</value>
				<value>classpath:env.bgmanager.properties</value>
			</list>
		</property>
	</bean>
	<!-- log4j config -->
<!-- 	<bean id="log4jServer" class="com.common.system.utils.log4j.Log4jConfigServer" -->
<!-- 		init-method="start" destroy-method="destroy" lazy-init="false"> -->
<!-- 		<property name="config_path" value="classpath:log4j.properties"></property> -->
<!-- 		<property name="watch_delay" value="30000"></property> -->
<!-- 	</bean> -->

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>org.springframework.util.Log4jConfigurer</value>
		</property>
		<property name="targetMethod">
			<value>initLogging</value>
		</property>
		<property name="arguments">
			<list>
				<value>classpath:log4j.properties</value>
			</list>
		</property>
	</bean>

	<bean id="mainDataSource_postgre" class="com.common.system.jdbc.CommonDataSource"
	init-method="init" lazy-init="false">
	<property name="driver" value="${jdbc.driverClassName}" />
	<property name="driverUrl" value="${jdbc.url}" />
	<property name="user" value="${jdbc.user}" />
	<property name="password" value="${jdbc.passwd}" />
	<property name="alias" value="xml-test" />
	<property name="maximumConnectionCount" value="50" />
	<property name="minimumConnectionCount" value="5" />
	<property name="delegateProperties" value="${jdbc.delegate}" />
	<property name="simultaneousBuildThrottle" value="5" />
	<property name="houseKeepingTestSql" value="select 1" />
	<property name="initsql">
	<value>select 1</value>
	</property>
	</bean>

	<!-- 配置事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="mainDataSource_postgre" />
		</property>
	</bean>
	<!-- 配置事务的传播特性 -->
	<!-- mybatis config -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mainDataSource_postgre" />
		<property name="configLocation" value="classpath:jpaConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>
					classpath*:com/tunyun/**/mapper/common/*Mapper.xml
				</value>
			</list>
		</property>
	</bean>
	<bean id="sqlSessionTemplate" class="com.common.system.jdbc.jpa.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<bean id="baseDao" class="com.common.system.jdbc.jpa.JPABaseDAO"
		abstract="true">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	<!-- 加载ebc-web -->
	<import
		resource="com/tunyun/product/ebc/web/statup/applicationContext_eai_ebc_web.xml" />
	<!-- 加载ebc-bgmanager -->
	<import
		resource="com/tunyun/product/ebc/bgmanager/statup/applicationContext_eai_ebc_bgmgr.xml" />
</beans>